pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          userRemoteConfigs: [[url: 'https://github.com/noambenm/Skubestore-devops.git']]])
            }
        }

        stage('Determine Changed K8s Manifests') {
            steps {
                script {
                    changedK8sFiles = []

                    def changedFilesRaw = sh(
                        script: """
                            git diff --diff-filter=AMR HEAD^ HEAD --name-only | grep '^k8s/' || true
                        """,
                        returnStdout: true
                    ).trim()

                    if (changedFilesRaw) {
                        changedK8sFiles = changedFilesRaw.split('\n')
                        echo "Changed K8s files detected: ${changedK8sFiles}"
                    } else {
                        echo 'No changed K8s files detected'
                    }
                }
            }
        }

        stage('Deploy to k8s') {
            when {
                expression {
                    return changedK8sFiles && changedK8sFiles.size() > 0
                }
            }
            steps {
                script {
                    changedK8sFiles.each { file ->
                        echo "Applying manifest: ${file}"
                        sh "kubectl apply -f ${file}"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace'
            cleanWs()
        }
        success {
            echo 'Deployment to k8s succeeded'
        }
        failure {
            echo 'Deployment to k8s failed'
        }
    }
}
